name: Deplyoment Readiness

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy Application with Docker Compose
    runs-on: ubuntu-latest
    env:
      # Plugboard service (production) environment variables
      SECRET_KEY_BASE: "0000000000000000000000000000000000000000000000000000000000000000"
      PHX_SIGNING_SALT: "0000000000000000000000000000000000000000000000000000000000000000"
      PHX_ENCRYPTION_SALT: "0000000000000000000000000000000000000000000000000000000000000000"
      PHX_HOST: "localhost"
      PHX_PORT: "4000"
      PHX_POOL_SIZE: "10"
      PHX_PRODUCTION_DATABASE_URL: "ecto://vera:vera@postgres/vera_production"
      # Postgres service environment variables
      PHX_POSTGRES_USERNAME: "vera"
      PHX_POSTGRES_PASSWORD: "vera"
      PHX_POSTGRES_DATABASE: "vera"
      PHX_POSTGRES_PORT: "5432"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker-compose --version

      - name: Build and Deploy Application
        run: docker-compose up -d --build

      - name: Wait for Application to be Ready
        run: |
          echo "Waiting for the application to be ready..."
          # Check the /health endpoint for up to 60 seconds
          for i in {1..30}; do
            if curl --silent --fail http://localhost:${PHX_PORT}/health; then
              echo "Application is ready!"
              exit 0
            fi
            echo "Waiting... ($i)"
            sleep 2
          done
          echo "Application did not become ready in time." >&2
          exit 1

      - name: Verify Application Health
        run: curl --fail http://localhost:4000/health

      - name: Tear Down Application
        if: always()
        run: docker-compose down
